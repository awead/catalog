<html  dir="LTR">
<head>
<title>CWRU and Associated Libraries                                                 </title>
<base target="_self"/>
<link rel="stylesheet" type="text/css" href="/scripts/ProStyles.css" />
<link rel="stylesheet" type="text/css" href="/screens/styles.css" />
<link rel="shortcut icon" type="ximage/icon" href="/screens/favicon.ico" />
<script language="JavaScript" type="text/javascript" src="/scripts/common.js"></script>
<script language="JavaScript" type="text/javascript" src="/scripts/elcontent.js"></script>
<script language="JavaScript">
<!-- Hide the JS
startTimeout(600000, "/");
// -->
</script>
<noscript>
<meta http-equiv="Refresh" content="600;URL=/" />
</noscript>
</head>
<body bgcolor="#FFFFFF" >
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js"></script>
<script type="text/javascript" src="/screens/cufon-yui.js"></script>
<script type="text/javascript" src="/screens/Verdana-font.js"></script>
<script type="text/javascript">
Cufon.replace('#caseLibrariesTitle', {textShadow: '0px -1px 0px #001a32'});
Cufon.replace('#catalogSearchTitle', {textShadow: '0px -1px 0px #000'});
Cufon.replace('.pageMainAreaHeader');
</script>
<script src="/screens/qunit.js"></script>
<script src="/screens/jquery.xdomainajax.js"></script>
<!-- <script src="/screens/test.js"></script> -->
<div class="topstuff">
<!-- Last Changed: Aug 15th, 2013 by aka43: corrected broken and incorrect links  -->
    <div id="headerContainer">
    <div id="headerInjection"></div>
        <!-- <div class="horizontalSpan" style="position:relative; height:23px;">
            <div id="caseTopLinks">
                <a href="#" id="left">CASE.EDU</a>
                <a href="#" class="middle">HOME</a>
                <a href="#" class="middle">DIRECTORIES</a>
                <a href="#" style="padding-right:5px;">SEARCH</a>
            </div>
        </div>-->
        <div class="horizontalSpan" id="blueSpan" style="position:relative; height:100px;">
                <div id="caseLogo"></div>
                <h2 id="caseLibrariesTitle">CASE AND AFFILIATE LIBRARIES</h2>
        </div>
        <div id="pnav">
            <ul>
            <li><a href="/">My Library Catalog</a></li>
            <li>|</li>
            <li><a href="http://lu4ld3lr5v.search.serialssolutions.com/">E-Journals</a></li>
            <li>|</li>
            <li><a href="http://library.case.edu/ksl/collections/ebooks/">E-Books</a></li>
            <li>|</li>
            <li><a href="http://library.case.edu/databases/rdbindex.aspx">Research Databases</a></li>
            <li>|</li>
            <li><a href="http://www.case.edu/dir/libraries.html">Case Libraries</a></li>
            <li>|</li>
            <li><a href="http://www.ohiolink.edu">OhioLink</a></li>
            <li>|</li>
            <li><a href="/">New Search</a></li>
            <li>|</li>
            <li><a href="/patroninfo">My Library Account</a></li>
            </ul>
		</div>
    </div>
</div>

<!--this is default <bib_display>-->
<div class="bibScreen">
<div class="navigationRow">
<a href="/.."><img src="/screens/startover.gif" alt="Start Over" border="0" /></a>

<a href="/search~S0?/.b3386820/.b3386820/1,1,1,B/frameset~b3386820?save=b3386820"><img src="/screens/bibexport.gif" alt="Export" border="0" /></a>
<a href="/search~S0?/.b3386820/.b3386820/1%2C1%2C1%2CB/marc~b3386820"><img src="/screens/marc_display.gif" alt="MARC Display" border="0" /></a>
<a href="/search~S0/,"><img src="/screens/another.gif" alt="Another Search" border="0" /></a>
<a href="http://olc1.ohiolink.edu/search/z?ca2ug+b3386820&title=The+big+book+of+blues+%3A&backlink=catalog.cwru.edu/search~S0?/.b3386820/.b3386820/1%2C1%2C1%2CB/frameset~b3386820"><img border=0 src="/screens/ohiolink.gif" alt="OhioLINK Central"></a>
</div>
<div class="navSearchHistory">
</div>
<div class="bibSearchtool">

<script language="JavaScript" type="text/JavaScript">
<!-- Hide the JS
var savedTag;
var savedSearch;
var savedExactSearch = null; 

var savedScope;
var sortButtonText = null;

var sortTypes = new Array();
var sortLabels = new Array();
sortTypes[0] = "t";
sortLabels[0] = "Title";
sortTypes[1] = "a";
sortLabels[1] = "Author";
sortTypes[2] = "c";
sortLabels[2] = "Year";
sortTypes[3] = "r";
sortLabels[3] = "Reverse Year";
sortTypes[4] = "n";
sortLabels[4] = "Call Number";
sortTypes[5] = "m";
sortLabels[5] = "Material Type";
sortLabels[6] = "System Sorted";
sortTypes[6] = "-";
var sortSelectedValue = "6";
var sortExactBrowseURL = "/search~S0?/.b3386820/.b3386820/1%2C1%2C1%2CB/frameset~b3386820"
var nonSortTags = "XYZprWw"
// Unhide the JS -->
</script>
<form name="searchtool" target="_self" action="/search~S0/">
      <label for="searchtype" style="display:none;">SearchType</label> <select name="searchtype" id="searchtype" onChange="initSort()">
        <option value="X"> WORD</option>
        <option value="a"> AUTHOR</option>
        <option value="t"> TITLE</option>
        <option value="d"> SUBJECT</option>
        <option value="c"> LC/NLM CALL NO</option>
        <option value="." selected="selected"> RECORD #</option>
      </select>
      &nbsp;
      <label for="searcharg" style="display:none;">Search</label><input type="text" name="searcharg" id="searcharg" size="30" maxlength="75" value="b3386820" />
      &nbsp;

<span id="sort_cell">
</span>

<script language="JavaScript" type="text/JavaScript">
<!-- Hide the JS
initSort();
// Unhide the JS -->
</script>
      <input type="hidden" name="SORT" value="D" /><input type="hidden" name="extended" value="0" /><input type="submit" name="SUBMIT" value="Search" />
<div>
      <input type="checkbox" name="availlim" value="1"  /> <span class="availLimMessage">Limit search to available items</span><br/>
</div>
<div>
      <input type="hidden" name="searchlimits" value="" />
      <input type="hidden" name="searchorigarg" value=".b3386820" />
</div>
</form>
</div>
<div class="bibPager">
</div>
<div>
</div>
<div class="otherResources">
</div>
<div class="bibMain">
<div class="bibInfo">
<div class="bibContent">
<table width="100%"><tr><td>
<!-- BEGIN BIBDETAIL TABLE BORDER -->
<table width="100%" border="0" cellspacing="1" cellpadding="2" class="bibDetail">
<tr  class="bibInfoEntry" ><td>
<!-- BEGIN INNER BIB TABLE -->
<table width="100%" cellspacing="3" cellpadding="0">
<tr><!-- next row for fieldtag=a -->
<td valign="top" width="20%"  class="bibInfoLabel">Author</td>
<td class="bibInfoData">
<a href="/search~S0?/aSantelli%2C+Robert/asantelli+robert/-3,-1,0,B/browse">Santelli, Robert</a>

</td></tr>
<tr><!-- next row for fieldtag=t -->
<td valign="top" width="20%"  class="bibInfoLabel">Title</td>
<td class="bibInfoData">
<strong>The big book of blues : a biographical encyclopedia / Robert Santelli</strong></td></tr>
<tr><!-- next row for fieldtag=p -->
<td valign="top" width="20%"  class="bibInfoLabel">Imprint</td>
<td class="bibInfoData">
New York : Penguin Books, 2001</td></tr>
</table>
<!-- END INNER BIB TABLE -->
</td></tr>
</table>
<!-- END BIBDETAIL TABLE -->
<div class="bibRecordLink"><div class="bibRecordLink"><a id="recordnum" href="/record=b3386820~S0">Persistent link to this title</a></div></div>

</td><td>
</td></tr></table>
</div>

<div>
</div>
<div>
</div>
<div>
</div>
<div>
</div>
<div>
</div>
<div>
<table width="100%" border="0" cellspacing="1" cellpadding="2" class="bibItems">
<tr  class="bibItemsHeader">
<th width="30%"  class="bibItemsHeader">
LOCATION
</th>
<th width="45%"  class="bibItemsHeader">
CALL NO.
</th>
<th width="25%"  class="bibItemsHeader">
STATUS
</th>
</tr>
<tr  class="bibItemsEntry">

<td width="30%" ><!-- field 1 -->&nbsp;Rock Hall Reference 
</td>
<td width="45%" ><!-- field C -->&nbsp;<a href="/search~S0?/cML102.B6+S26+2001/cml++102+b6+s26+2001/-3,-1,,E/browse">ML102.B6 S26 2001</a> <!-- field v --><!-- field # -->&nbsp;</td>
<td width="25%" ><!-- field % -->&nbsp;LIB USE ONLY </td></tr>
</table>
</div>
<div>
</div>
<div class="bibContent">
<!-- BEGIN BIBDETAIL TABLE BORDER -->
<table width="100%" border="0" cellspacing="1" cellpadding="2" class="bibDetail">
<tr  class="bibInfoEntry" ><td>
<!-- BEGIN INNER BIB TABLE -->
<table width="100%" cellspacing="3" cellpadding="0">
<tr><!-- next row for fieldtag=e -->
<td valign="top" width="20%"  class="bibInfoLabel">Edition</td>
<td class="bibInfoData">
Revised and enlarged</td></tr>
<tr><!-- next row for fieldtag=r -->
<td valign="top" width="20%"  class="bibInfoLabel">Descript'n</td>
<td class="bibInfoData">
xiv, 559 p. &#59; 23 cm</td></tr>
<tr><!-- next row for fieldtag=n -->
<td valign="top" width="20%"  class="bibInfoLabel">Note</td>
<td class="bibInfoData">
Includes bibliographical references (p. [541]-545), discographies, and index</td></tr>
<tr><!-- next row for fieldtag=b -->
<td valign="top" width="20%"  class="bibInfoLabel">Alt Name</td>
<td class="bibInfoData">
<a href="/search~S0?/aGerard%2C+Manny%2C/agerard+manny/-3,-1,0,B/browse">Gerard, Manny, donor</a>

</td></tr>
<tr><!-- next row for fieldtag=b -->
<td></td>
<td class="bibInfoData">
<a href="/search~S0?/aHenke%2C+James%2C/ahenke+james/-3,-1,0,B/browse">Henke, James, donor.</a>

</td></tr>
<tr><!-- next row for fieldtag=b -->
<td></td>
<td class="bibInfoData">
<a href="/search~S0?/aScott%2C+Jane%2C+1919-2011%2C/ascott+jane+1919+2011/-3,-1,0,B/browse">Scott, Jane, 1919-2011, donor</a>

</td></tr>
<tr><!-- next row for fieldtag=b -->
<td></td>
<td class="bibInfoData">
<a href="/search~S0?/aManny+and+Skippy+Gerard+Collection+%28Rock+and+Roll/amanny+and+skippy+gerard+collection+rock+and+roll+hall+of+fame+and+museum+library+and+archives/-3,-1,0,B/browse">Manny and Skippy Gerard Collection (Rock and Roll Hall of Fame and Museum. Library and Archives)</a>

</td></tr>
<tr><!-- next row for fieldtag=b -->
<td></td>
<td class="bibInfoData">
<a href="/search~S0?/aJane+Scott+Papers+%28Rock+and+Roll+Hall+of+Fame+and/ajane+scott+papers+rock+and+roll+hall+of+fame+and+museum+library+and+archives/-3,-1,0,B/browse">Jane Scott Papers (Rock and Roll Hall of Fame and Museum. Library and Archives)</a>

</td></tr>
<tr><!-- next row for fieldtag=u -->
<td valign="top" width="20%"  class="bibInfoLabel">Alt Title</td>
<td class="bibInfoData">
Book of blues</td></tr>
<tr><!-- next row for fieldtag=d -->
<td valign="top" width="20%"  class="bibInfoLabel">Subject</td>
<td class="bibInfoData">
<a href="/search~S0?/dBlues+musicians+--+Biography/dblues+musicians+biography/-3,-1,0,B/browse">Blues musicians -- Biography</a>

</td></tr>
<tr><!-- next row for fieldtag=d -->
<td></td>
<td class="bibInfoData">
<a href="/search~S0?/dBlues+musicians+--+Encyclopedias/dblues+musicians+encyclopedias/-3,-1,0,B/browse">Blues musicians -- Encyclopedias</a>

</td></tr>
<tr><!-- next row for fieldtag=d -->
<td></td>
<td class="bibInfoData">
<a href="/search~S0?/dBlues+%28Music%29+--+Bio-bibliography/dblues+music+bio+bibliography/-3,-1,0,B/browse">Blues (Music) -- Bio-bibliography</a>

</td></tr>
<tr><!-- next row for fieldtag=i -->
<td valign="top" width="20%"  class="bibInfoLabel">ISBN</td>
<td class="bibInfoData">
0141001453</td></tr>
<tr><!-- next row for fieldtag=i -->
<td></td>
<td class="bibInfoData">
9780141001456</td></tr>
<tr><!-- next row for fieldtag=o -->
<td valign="top" width="20%"  class="bibInfoLabel">OCLC #</td>
<td class="bibInfoData">
45080162</td></tr>
</table>
<!-- END INNER BIB TABLE -->
</td></tr>
</table>
<!-- END BIBDETAIL TABLE -->
</div>
</div>
<div style="clear:both"></div>
</div>
<div  class="bibPager">
</div>
<div  class="navigationRow">
<a href="/.."><img src="/screens/startover.gif" alt="Start Over" border="0" /></a>

<a href="/search~S0?/.b3386820/.b3386820/1,1,1,B/frameset~b3386820?save=b3386820"><img src="/screens/bibexport.gif" alt="Export" border="0" /></a>
<a href="/search~S0?/.b3386820/.b3386820/1%2C1%2C1%2CB/marc~b3386820"><img src="/screens/marc_display.gif" alt="MARC Display" border="0" /></a>
<a href="/search~S0/,"><img src="/screens/another.gif" alt="Another Search" border="0" /></a>
<a href="http://olc1.ohiolink.edu/search/z?ca2ug+b3386820&title=The+big+book+of+blues+%3A&backlink=catalog.cwru.edu/search~S0?/.b3386820/.b3386820/1%2C1%2C1%2CB/frameset~b3386820"><img border=0 src="/screens/ohiolink.gif" alt="OhioLINK Central"></a>
</div>
<div  class="navSearchHistory">
</div>
</div>
<br />

<!-- begin botlogo.html : 06 Apr 10-->
<script type="text/javascript" src="https://www.google.com/jsapi?key=ABQIAAAAb5YDyCXRcqdeNmHI71XO1BSBVRMBuqaITfX7W8sfGmiMNoSpyRTaCa1aM6may2wQvUqd3QNTfpVr_w"></script>
<script type="text/javascript">
/*-*-*-*-*-*-*
 * Catalog Search Capture
 *
 * -- Marc Andrysco 07/23/09
 */

/*~*~*~*~*
 * Search Helper Function
 */
 
/**
 * search_record
 *   This function takes search information plus a callback, and uses
 *   that information to create the appropriate script tag. The rest
 *   is taken care of by the external script on the library server.
 */

function search_record(term, type, callback, location)
{
    var tag;
    
    if(location)
        location = "&location=" + location;
    else
        location = "";
    
    tag = document.createElement("script");
    tag.setAttribute("type", "text/javascript");
    tag.setAttribute("src",
        "https://library.case.edu/ksl/KSLTransactionDashboard.aspx?method=SearchHistory" +
        "&term=" + term +
        "&type=" + type +
        "&callback=" + callback + location
    );
    
    document.body.appendChild(tag);
    
    return false;
}

/**
 * find_by_name Function
 *   This function takes a tag's name (not the ID) and searches the HTML
 *   for an element with that name. If an element is found with said name
 *   and contains a value, then that element is returned. Otherwise, null
 *   is returned.
 */

function find_by_name(name)
{
    list = document.getElementsByName(name);
    if(!list)
        return null;

    for(var i in list) {
        if(!list[i].value)
            continue;

        return list[i].value;
    }

    return null;
}

/**
 * search_type_translate Function
 *   This function inputs a single character that represents the search
 *   type. This character is converted into the associated string for that
 *   kind of search.
 */
 
function search_type_translate(type)
{
    switch(type) {
    case "d":
        return "subject";
    case "X":
    case "Y":
        return "keyword";
    case "a":
        return "author";
    case "t":
        return "title";
    case "j":
        return "mesh";
    case "c":
        return "callnumber";
    case "N":
        return "note";
    }
    
    return null;
}

/**
 * search_getterm Function
 *   This function attempts to get the search term from the webpage. This
 *   will not work on an advanced search
 */

function search_getterm()
{   
    term = find_by_name("searcharg");
    if(term == null) {
        term = find_by_name("SEARCH");
        if(term == null)
            return null;
    }
    
    return term;
}


/*~*~*~*~*
 * Search Handler Functions
 */

/**
 * search_mainpage Function
 *   This function is used to retrieve information regarding a search
 *   using the main search of the catalog.
 */

function search_mainpage()
{
    list = document.getElementsByName("searchtype");
    if(list) {
        for(i = 0; i < list.length; i++) {
            if(list[i].selectedIndex == null) {
                if(list[i].checked == false)
                    continue;
                
                type = list[i].value;
            }
            else
                type = list[i].options[list[i].selectedIndex].value;
                
            break;
        }
    }
    
    term = search_getterm();
    
    if((type == null) || (term == null))
        return true;
    
    type = search_type_translate(type);
    
    return search_record(term, type, "3");
}

/**
 * search_basic Function
 *   This function is used to parse out values if a basic search is
 *   made from a page other than either the advanced page or the
 *   main page.
 */

function search_basic() {
    type = window.location.pathname.match(/\/[a-zA-Z](#.*)?$/);
    if(type != null)
        type = type[0].charAt(1);
        
    term = search_getterm();
    type = search_type_translate(type);
    
    return search_record(term, type, "1");
}

/**
 * search_advanced Function
 */

function search_advanced() {
    term = "";
    type = "";
    for(var i = 1; i <= 4; i++) {
        str = find_by_name("searchText" + i);
        if((str == null) || (str.length == 0))
            continue;
        
        if(term.length > 0) {
            term += ",";
            type += ",";
        }
        
        term += str.replace(",", "");
        
        str = find_by_name("fieldLimit" + i);
    
        if(str)
            type += search_type_translate(str.charAt(0));
        else
            type += "any";
    }
    
    return search_record(term, type, "2", "advanced");
}

var viewMoreBtn = null;
list = document.getElementsByTagName("input");
for (var i in list)
    if (list[i].type != null && list[i].value != null && list[i].type.toLowerCase() == "submit" && list[i].value.indexOf("View additional copies") > -1)
        viewMoreBtn = list[i];
list = document.getElementsByTagName("form");
for (var i in list)
    // Do not change the "View additional copies" button (otherwise it will not work)
    if (viewMoreBtn == null || viewMoreBtn.parentNode != list[i])
        list[i].onsubmit = search_mainpage;

list = document.getElementsByTagName("img");
for (var i in list) {
    if(list[i].alt != "Submit")
        continue;
    if(typeof iiiDoSubmit_1 == 'function')
        list[i].parentNode.onclick = search_basic;
    else if(typeof iiiAdvSubmit == 'function')
        list[i].parentNode.onclick = search_advanced;
    else
        list[i].parentNode.onclick = function() { search_getterm("0"); };
}

/*
 * End Search Capture
 *~*~*~*~*/

/*~*~*~*~*~*
* Begin Login Box Script
* Erases one side if user types in the other, so user cannot log in with both methods
*/
function getInput(name)
{
    var allInputs = document.getElementsByTagName("input");
    for (i=0; i < allInputs.length; i++)
        if (allInputs[i].name == name)
            return allInputs[i];
}
function reset(arr)
{
    for (var i in arr)
        try {
            getInput(arr[i]).value="";
        } catch (err) { }
}
function resetExtPat()
{
    reset(new Array("extpatid", "extpatpw"));
}
function resetLibPat()
{
    reset(new Array("name", "code", "pin", "pin1", "pin2"));
}

// Add onchange attributes, remove the canvas
function setupLogin()
{
    arr = [getInput("extpatid"), getInput("extpatpw"), getInput("name"), getInput("code"), getInput("pin"), getInput("pin1"), getInput("pin2")];
    for (var i in arr)
        if (arr[i] != null)
            if (i < 2)
                arr[i].onchange = resetLibPat;
            else
                arr[i].onchange = resetExtPat;
    removeCanvas();
}
/*
* End Login Box script
*~*~*~*~*~*~*/

/*~*~*~*~*~*~*
 * Begin Google Books script
 * Uses the Google Books API to put a book preview on the page
 * Uses Dynamic Links to check and only embed full previews
 * If no preview available, removes the viewer canvas, and adds a link
 * to a Google Books search for that book, if no other buttons are displayed
 * Also adds the search buttons (see button_logic wiki page)
 */

var displayedButton = false;

// Initialize book viewer
function initialize()
{
    book = getBook();
    dynamicLink = document.createElement("script");
    dynamicLink.setAttribute("src", "http://books.google.com/books?jscmd=viewapi&bibkeys=" + book + "&callback=checkPreviewStatus");
    document.getElementById("frame").appendChild(dynamicLink);
}

function checkPreviewStatus(bookInfo)
{
    var count = 0;
    for (id in bookInfo)
    {
        count++;
        if (bookInfo[id] && (bookInfo[id].preview == 'full' || bookInfo[id].preview == 'partial'))
        {
            try {
                var viewer = new google.books.DefaultViewer(document.getElementById("viewerCanvas"));
                if (displayedButton == true)
                    viewer.load(id, removeCanvas, found);
                else    // did not display a button, or did not initialize with button
                    viewer.load(id, searchTitle, found);
            } catch (err) {
                removeCanvas();
            }
        }
        else
        // Not a full or partial preview
            count = 0;  // so will search for title
    }
    if (count == 0)
    // Could not find using ISBN or OCLC
        if (!displayedButton)
           searchTitle();
        else
            removeCanvas();
}


// Initialize and add button
function initializeWithButton()
{
    displayedButton = addButtonImg();
    initialize();
}

// ------------------------------------------------------------------------------------------------------
// This code is for creating the catalog into a Kiosk only functionality
// written by Alan Atesoglu (aka43)
// -------------------------------------------------------------------------------------------------------

//checks if kiosk and sets up page accordingly
function kioskCheck() {
if( document.cookie.indexOf("kiosk") != (-1)) {
	document.getElementsByTagName("ul")[0].style.visibility = "hidden" ;//will remove the top nav bar
	if (document.getElementsByName("HISTORY")[0] != null) {
		document.getElementsByName("HISTORY")[0].style.visibility = "hidden"; //will remove the history bar from top
		}
	if (document.getElementsByName("HISTORY")[1] != null) {
		document.getElementsByName("HISTORY")[1].style.visibility = "hidden"; //will remove the history bar from the bottom
		}
	if (document.getElementsByName("jumpto")[0] != null) {
		document.getElementsByName("jumpto")[0].style.visibility = "hidden"; //will remove the "locate in results" 
		}
	for (var i = 0; i < document.getElementsByTagName("img").length; i++) { // removes the OhioLINK button from all pages
		if (document.getElementsByTagName("img")[i].alt == "OhioLINK Central") {
			document.getElementsByTagName("img")[i].style.visibility = "hidden";
			}
		else;
		}
	for (var i =0; i < $(".button").length; i++) { // removes buttons that dont have alt text of "Submit" or "Previous Record" or "Next Record"
		if ($(".button")[i].alt == "Submit" || $(".button")[i].alt == "Previous Record" || $(".button")[i].alt == "Next Record" || $(".button")[i].alt == "Cancel") {
			; 
			}
		else
			$(".button")[i].style.visibility = "hidden";
		}
	if (document.getElementById("rightColumn") != null) {
		document.getElementById("rightColumn").style.height = ((document.getElementById("rightColumn").style.height).substring(0,3)-110)+("px");
		document.getElementById("leftColumn").style.height = ((document.getElementById("leftColumn").style.height).substring(0,3)-110)+("px");
		document.getElementsByTagName("Form")[0].style.paddingTop = "40px";
		document.getElementById("leftColumn").style.height = null;
		var kioskBullet1 = document.createElement("h3");
		var kioskBullet2 = document.createElement("h3");
		var kioskBullet3 = document.createElement("h3");
		document.getElementById("leftColumn").removeChild(document.getElementById("alertHolder"));
		kioskBullet1.appendChild(document.createTextNode("Fast and easy access to the library catalog"));
		kioskBullet2.appendChild(document.createTextNode("No sign-in required"));
		kioskBullet3.appendChild(document.createTextNode("**Catalog access only**"));
		$(".sections")[0].appendChild(kioskBullet1).style.fontSize = "300%";
		$(".sections")[0].appendChild(kioskBullet2).style.fontSize = "300%";
		$(".sections")[0].appendChild(kioskBullet3).style.fontSize = "300%";
		$(".sections")[0].removeChild(document.getElementsByTagName("table")[0]);
		document.getElementsByTagName("h3")[0].style.color = "#336699";
		document.getElementsByTagName("h3")[1].style.color = "#336699";
		document.getElementsByTagName("h3")[2].style.color = "#336699";
		Cufon.replace('h3', {textShadow: '0px -1px 0px #001a32'});
	}
	}
}
$(document).load(kioskCheck());

//sets the cookie for the kiosk
function setKiosk(trigger) {
	if (trigger == true) {
	setCookie("kiosk", "yes", "3650");
	kioskCheck();
	return ("Kiosk mode is turned on");
	}
	else if (trigger == false) {
	setCookie("kiosk", null, -1);
	return ("Kiosk mode is turned off");
	}
}


//function that creates cookies
function setCookie(name, value, days) {
	if (days) {
		var date = new Date();
		date.setTime(date.getTime()+(days*24*60*60*1000));
	var expires = "; expires="+date.toGMTString();;}
	else var expires = "";
document.cookie = name+"="+value+expires+"; path=/";
return "cookie set";
}


// ------------------------------------------------------------------------------------------------------
// This code is for pages containing the phrase "CWRU only" and puts the green light / redlight indicating VPN connection
// written by Alan Atesoglu (aka43)
// -------------------------------------------------------------------------------------------------------

var isIE8 = false; //This ugly block sets if IE 8 is running
</script><!--[if lte IE 8]><script type="text/javascript">
isIE8 = true;
</script><![endif]--><script type="text/javascript">

//This will call the webservice to see if you are on the case network
$(document).ready(function isConnected() {
	for (var i =0; document.getElementsByTagName('a').length > i; i++) {
		if (document.getElementsByTagName('a')[i].innerHTML.indexOf('CWRU only') != -1) { //scans the page for the words "CWRU only"

			if (retrieveConnection(isIE8) == true) { //attaches greenlight if true is found in response
				var greenLight = document.createElement("img");
				greenLight.src = "/screens/img_greenLight.gif";
				var isConnected = document.createTextNode("Connected"); 
				document.getElementById("onCampus").appendChild(greenLight);
				onCampus.appendChild(isConnected);
				document.getElementsByTagName("img")[document.getElementsByTagName("img").length-1].title = "You are coming from the CWRU network";
				document.getElementsByTagName("img")[document.getElementsByTagName("img").length-1].style.width = '16px';
				document.getElementsByTagName("img")[document.getElementsByTagName("img").length-1].style.height = '16px';
			}
			if (retrieveConnection(isIE8)==false) {//if ipCheck came back false, attaches redlight
				var redLight = document.createElement("img");
				redLight.src = "/screens/img_redLight.gif";
				var isConnected = document.createTextNode("Not Connected");  
				document.getElementById("onCampus").appendChild(redLight);
				onCampus.appendChild(isConnected);
				document.getElementsByTagName("img")[document.getElementsByTagName("img").length-1].title = "You are not coming from the CWRU network";
		
				document.getElementsByTagName("img")[document.getElementsByTagName("img").length-1].style.width = '16px';
				document.getElementsByTagName("img")[document.getElementsByTagName("img").length-1].style.height = '16px';
			}
		}
		else {}
	}
});

function retrieveConnection(internetEx) { // The value of internetEx is a boolean depending on if you are using IE8
	if (internetEx == false) { //Chrome, Firefox, Safari, IE9+
		var ipCheck = new XMLHttpRequest();
		ipCheck.open("GET", "http://library.case.edu/ksl/KSLWS.asmx/onCampus", false);
		//ipCheck.timeout = 5;
		ipCheck.send();
		if (ipCheck.responseText.indexOf("true") != -1) {
			return true;
		}
		else 
			return false;
	}
	if (internetEx == true) { //IE8
		var ipCheck = new XDomainRequest();
		ipCheck.open("GET", "http://library.case.edu/ksl/KSLWS.asmx/onCampus");
		//ipCheck.timeout = 10;
		ipCheck.send();
		if (ipCheck.responseText.indexOf("true") != -1) {
			return true;
		}
		else 
			return false;
	}
}

// ---------------------------------------------------------------------------------------------------------------


// If book is not found via ISBN or OCLC
// Display a link to a search on Google Books for the title
function searchTitle()
{
    removeCanvas();
    
    // Get book title
    var title = "";
    var rows = document.getElementsByTagName("td");
    for (var i=0; i < rows.length; i++)
        if (rows[i].innerHTML == "Title")
        {
            title = rows[i+1].innerHTML;
            break;
        }

    // Format title:
    title = title.replace(/\r|\n|\r\n/g, " ");                  // Replace newlines with spaces
    title = title.replace(/(\[.*\])|(\/.*)|(<.*?>)/g, "");      // Remove comments [...], author /..., and HTML <...>
    title = title.replace(/(^| )\S*?[^\w- ;,].*?( |$)/g, " ");  // Remove words with special characters, except hyphens
    title = title.replace(/ +$/g, "");                          // Delete spaces at end of string
    title = title.replace(/ +/g, " intitle:");                  // Preface spaces with "intitle:"
    
    // Get author
    var author = "";
    for (i=0; i < rows.length; i++)
        if (rows[i].innerHTML == "Author")
        {
            author = rows[i+1].innerHTML;
            break;
        }
    
    // Format author
    if (author != "")
    {
        author = author.replace(/\r|\n|\r\n/g, "");            // Remove newlines
        author = author.replace(/(<.*?>)/g, "");                // Remove HTML
        if (author.indexOf(" ") > -1)
            author = author.substr(0, author.indexOf(" "));     // Keep only first word (last name)
        author = "+inauthor:" + author;                         // Preface with "inauthor:"
    }
    searchRss(title, author);
}

// Search via RSS Feed on Google books
// Searches for books matching the title
// If there are any results, the button will show up
function searchRss(title, author)
{
    feedurl = "http://www.google.com/books/feeds/volumes?q=" + escape(title) + author + "&min-viewability=partial&max-results=1";
    var feed = new google.feeds.Feed(feedurl);
    feed.load(function(result)
    {
        if (!result.error)
        {
            if (result.feed.entries.length == 1)
            {
                imgsrc = "https://library.case.edu/images/catalog/google_books_search.gif";
                linksrc = "http://books.google.com/books?q=" + escape(title) + author + "&as_brr=3";
                attachButtonImg(imgsrc, linksrc, "Search Google Books");
            }
        }
    });
}

// Delete the viewer div
function removeCanvas()
{
    var canv = document.getElementById("viewerCanvas");  
    if(canv != null) {
        canv.setAttribute("style", "height:0px");
        canv.parentNode.removeChild(canv);
    }
}

// Find the book's ISBN or OCLC in the page
// Will return ISBN if possible, else OCLC
function getBook()
{
    var rows = document.getElementsByTagName("td");
    var oclc = null;
    for (i=0;i<rows.length;i++) {
        if (rows[i].innerHTML == "ISBN") {
            book = rows[i+1].innerHTML.replace(/\r|\n|\r\n/g, "");  //remove newlines before ISBN
            if (book.indexOf(" ") != -1)
                book = book.substr(0, book.indexOf(" "));   //remove comments like "ISBN: 1234 (paperback)"
            return "ISBN:" + book;
        } else if (rows[i].innerHTML == "OCLC #") {
            book = rows[i+1].innerHTML.replace(/\r|\n|\r\n/g, "");
            if (book.indexOf(" ") != -1)
                book = book.substr(0, book.indexOf(" "));
            oclc = "OCLC:" + book;                          //don't return OCLC immediately, prefer to get ISBN's
        }
    }
    return oclc;
}

// Found the book, format the viewer
function found()
{
    moveNavBar();
    
    // Add header
    var div = document.getElementById("frame");
    var title = document.createElement("b");
    title.innerHTML = "Book Preview:";
    div.insertBefore(title, div.firstChild);
    
    // Add preview button at top, so people know to scroll down
    var buttonDiv;
    var allDivs = document.getElementsByTagName("div");
    for (i in allDivs)
        if (allDivs[i].className == "bibInfo") {
            buttonDiv = allDivs[i];
            break;
        }
    var img = document.createElement("img");
    // use the required official logo:
    img.setAttribute("src", "https://www.google.com/intl/en/googlebooks/images/gbs_preview_button1.gif");
    img.setAttribute("border", "0");
    var link = document.createElement("a");
    link.setAttribute("href", "#bookviewer");
    link.appendChild(img);
    var div = document.createElement("div");
    div.setAttribute("align", "right");
    div.setAttribute("class", "googleButton");
    div.appendChild(link);
    buttonDiv.insertBefore(div, buttonDiv.firstChild);
}

// Move bottom nav bar below viewer
function moveNavBar()
{
    var allDivs = document.getElementsByTagName('div');
    var move = [];
    var nav = document.getElementById('navBar');
    var j = 0;
    for (i=allDivs.length-1;i>=0;i--) {
        if (allDivs[i].className == "bibPager") {
            move[j] = allDivs[i];
            j++;
        }  else if (allDivs[i].className == "navigationRow") {
            move[j] = allDivs[i];
            j++;
        } else if (allDivs[i].className == "navSearchHistory") {
            move[j] = allDivs[i];
            j++;
        }
    }
    for (i=2; i>=0;i--)
        navBar.appendChild(move[i]);
}

/*
* End Google Books script
*~*~*~*~*~*~*/

function buttonQuery()
{
    var rows = document.getElementsByTagName("td");
    var idNum = "";
    var author = "";
    var title = "";
    var callnum = "";
    var qstr = "";
    for (i=0;i<rows.length;i++) {   
        if((rows[i].innerHTML.indexOf("Iron Mountain") > -1)||(rows[i].innerHTML.indexOf("RRCC") > -1)||(rows[i].innerHTML.indexOf("UL SpecColl Periodical") > -1))
        {
            if(rows[i+1].innerHTML.indexOf("PERIODICALS") > -1)
                callnum="PERIODICALS";
            else if (rows[i+1].innerHTML.indexOf("Lib&#46;&nbsp;Has") > -1)
                callnum="";
            else
            {
                callnum=rows[i+1].innerHTML.replace(/\r|\n|\r\n/g, "");
                callnum = callnum.replace(/<[^>]*>/g, "");
                callnum = callnum.replace(/[\s]|&nbsp;/g, "+");
            }
        }
        if(rows[i].innerHTML=="Author" || rows[i].innerHTML=="Corp Author" || rows[i].innerHTML=="Conference")
        {
           author =rows[i+1].innerHTML.replace(/\r|\n|\r\n/g, "");
           author = author.replace(/<[^>]*>/g, "");
           author = author.replace(/[\s]/g, "+");
        }
        if(rows[i].innerHTML=="Title")
        {
            title=rows[i+1].innerHTML.replace(/\r|\n|\r\n/g, "");
            title = title.replace(/<[^>]*>/g, "");
            title = title.replace(/[\s]/g, "+");
        }
        if (rows[i].innerHTML == "OCLC #") 
        {
            idNum = rows[i+1].innerHTML.replace(/\r|\n|\r\n/g, "");
            
            if (idNum.indexOf(" ") != -1)
                idNum = idNum.substr(0, idNum.indexOf(" "));
            idNum = idNum.replace(/<[^>]*>/g, "");
            idNum = idNum.replace(/[\s]/g, "+");
            idNum = "OCLC:+"+idNum;
        }
        else if (rows[i].innerHTML == "ISBN") 
        {
            idNum =rows[i+1].innerHTML.replace(/\r|\n|\r\n/g, ""); //remove newlines before ISBN
            
            if (idNum.indexOf(" ") != -1)
                idNum = idNum.substr(0, idNum.indexOf(" "));   //remove comments like "ISBN: 1234 (paperback)"
            idNum = idNum.replace(/<[^>]*>/g, "");
            idNum = idNum.replace(/[\s]/g, "+");
            idNum = "ISBN:+"+idNum;
        } 
    }
    qstr="callnum="+callnum+"&author="+author+"&title="+title+"&idNum="+idNum;
    //qstr=encodeURIComponent(qstr);

    return qstr;
 }

function getProquestLink()
{
    var proquestLink = "http://proquest.umi.com/pqdweb?RQT=512&querySyntax=PQ&searchInterface=1&SrchMode=2&TS=1248880567&moreOptState=CLOSED&clientId=43422&h_pub_title=&h_pub_title1=&h_pub_title2=&h_pub_title3=&h_pub_title4=&h_pub_title5=&h_pub_title6=&h_pub_title7=&h_pmid=&h_pmid1=&h_pmid2=&h_pmid3=&h_pmid4=&h_pmid5=&h_pmid6=&h_pmid7=&SQ=AUTHORNAMEHERE&FO=AU&OP1=AND&SQ1=TITLENAMEHERE&FO1=TITLE&OP2=AND&SQ2=&FO2=CITABS&OP3=AND&SQ3=&FO3=CITABS&OP4=AND&SQ4=&FO4=CITABS&OP5=AND&SQ5=&FO5=CITABS&OP6=AND&SQ6=&FO6=CITABS&date=ALL&onDate=&beforeDate=&afterDate=&fromDate=&toDate=&Oppubtitle=AND&pubtitle=&Opsubject=AND&subject=&Opcompany=AND&company=&Opname=AND&name=&Opgeo=AND&geo=&Opcc=AND&cc=&Opsic=AND&sic=&OpSF=AND&SF=any&OpAT=AND&AT=any&revType=review&revPos=all&STYPE=all&sortby=REVERSE_CHRON&PageSize=10";
    var author="";
    var title="";
    var rows = document.getElementsByTagName("td");
    for (i=0;i<rows.length;i++){
        if(rows[i].innerHTML=="Author")
        {
           author =rows[i+1].innerHTML.replace(/\r|\n|\r\n/g, "");
           author = author.replace(/<[^>]*>/g, "");
           author = author.replace(/[0-9]{2,4}.*/, "");
           author = author.replace(/[\s]/g, "+");
           author = author.replace(/,/g, "%2C");
        }
        if(rows[i].innerHTML=="Title")
        {
            title=rows[i+1].innerHTML.replace(/\r|\n|\r\n/g, "");
            title = title.replace(/<[^>]*>/g, "");
            title = title.substring(0,title.indexOf("/"));
            title = title.replace(/[\s]/g, "+");
        }
    }
    proquestLink = proquestLink.replace(/AUTHORNAMEHERE/, author);
    proquestLink = proquestLink.replace(/TITLENAMEHERE/, title);

    return proquestLink;
}

function getDownloadOhioLink()
{
    var ohiolinkURL = "";
    var rows = document.getElementsByTagName("td");
    for (i=0;i<rows.length;i++){
        if(rows[i].innerHTML.indexOf("online version")>-1)
        {
            ohiolinkURL = rows[i].innerHTML.replace(/\r|\n|\r\n/g, "");
            ohiolinkURL = ohiolinkURL.match(/href=\"[^\"]*\"/).toString();
            ohiolinkURL = ohiolinkURL.substring(6, ohiolinkURL.length - 1);
        }
    }
    return ohiolinkURL;
}

//function getDownloadOhioLink()
//{
//    
//    var marcLink = window.location.href;
//    var downloadLink = "";
//    marcLink = marcLink.replace(/frameset/, "marc");
//    
//    /***
//    * using XMLHTTPRequest to grab the source code
//    ****/
//    
//    var xmlhttp=new XMLHttpRequest();
//    xmlhttp.open("GET", marcLink, true);
//    xmlhttp.onreadystatechange = function() {
//      if (xmlhttp.readyState == 4) {
//        var textout = xmlhttp.responseText;
//        downloadLink = textout.substring((textout.indexOf("|u")+2), textout.indexOf("|z"));
//        alert(downloadLink);
//      }
//    };
//    xmlhttp.send(null);
//    return downloadLink;
//}

/*
 * Adds buttons depending on location / type of book
 * See button_logic wiki page
 */
function addButtonImg()
{
   
  if( document.cookie.indexOf("kiosk") == (-1)) { //checks to make sure that kiosk is not turned on
   
    var rows = document.getElementsByTagName("td");
    var imgsrc, linksrc;
    var imgsrc2, linksrc2;
    var imgsrc3, linksrc3;
    var showRequestButton = true;
    var isThesis= false;
    var onlineVersionAvailable = false;
    var electronicResource = false;
    var isPhD = false;
    var year = null;
    var displayed = false;
    
    requestType = new Array(
    "MSASS Theses",
    "CWRU Archives",
    "Kelvin Smith Stacks",
    "HCL Stacks",
    "CIArt Stacks",
    "Allen Stecher Room",
    "Law Storage",
    "Law Library Stacks"); 
       
    // check to see if we need to show button or not
    for(i=0; i<rows.length; i++)
    {
        for (j in requestType)
            if (rows[i].innerHTML.indexOf(requestType[j]) > -1)
                showRequestButton = false;
        
        if(rows[i].innerHTML.indexOf("Thesis")>-1)
            isThesis=true;
        if(rows[i].innerHTML.indexOf("Theses")>-1)
            isThesis=true;
        if(rows[i].innerHTML.indexOf("online version")>-1)
            onlineVersionAvailable = true;
        if(rows[i].innerHTML.indexOf("electronic resource")>-1)
            electronicResource = true;
        if(rows[i].innerHTML.indexOf("Ph.D")>-1)
            isPhD = true;
        if(rows[i].innerHTML.indexOf("Ph. D.") >-1)
            isPhD = true;

                
        if(rows[i].innerHTML == "Imprint") {
            year = parseInt(rows[i+1].innerHTML);
            if(isNaN(year))
                year = null;
        }
    }
    
    if(onlineVersionAvailable & isThesis) { // OhioLink Button
        imgsrc3 = "https://library.case.edu/images/catalog/ohiolink_search.gif";
        linksrc3 = getDownloadOhioLink();
        linksrc3 = decodeURIComponent(linksrc3);
        linksrc3 = linksrc3.replace(/&amp;/g, "&");
    }
    else if(showRequestButton) {
        for(i = 0; i < rows.length; i++) { // Check Iron Mountain first
            if(rows[i].innerHTML.indexOf("Iron Mountain") > -1) {
                imgsrc = "https://library.case.edu/images/catalog/RequestItem-IM.gif";
                linksrc = "http://library.case.edu/ksl/collections/ironmountain/form/?"+buttonQuery()+"&url="+ document.getElementById("recordnum");
                break;
            }
        }
        
        for(i = 0; i < rows.length; i++) { // then check RRCC (so if both RRCC and Iron Mtn., RRCC displays)
            if(rows[i].innerHTML.indexOf("RRCC") > -1) {
                imgsrc = "https://library.case.edu/images/catalog/RequestItem-RRCC.gif";
                linksrc = "http://library.case.edu/ksl/collections/rrcc/form/?"+buttonQuery()+"&url="+ document.getElementById("recordnum");
                break;
            }
        }
	
		for(i = 0; i < rows.length; i++) { // Check for Spec Coll
            if(rows[i].innerHTML.indexOf("UL Spec Coll") > -1) {
                imgsrc = "https://library.case.edu/images/catalog/RequestItem-RRCC.gif";
                linksrc = "http://library.case.edu/ksl/collections/special/specialcollectionsretrievalrequestform/?"+buttonQuery()+"&url="+ document.getElementById("recordnum");
                break;
			}
		}
		
		for(i = 0; i < rows.length; i++) { // Check for Spec Coll Periodicals
            if(rows[i].innerHTML.indexOf("UL SpecColl") > -1) {
                imgsrc = "https://library.case.edu/images/catalog/RequestItem-RRCC.gif";
                linksrc = "http://library.case.edu/ksl/collections/special/specialcollectionsretrievalrequestform/?"+buttonQuery()+"&url="+ document.getElementById("recordnum");
                break;
			}
        }
	}
		
        // Proquest button
        else if(i == rows.length && (isThesis || isPhD)) {
                imgsrc2 = "https://library.case.edu/images/catalog/proquest_search.gif";
                linksrc2 = getProquestLink();   
        }
        
        /*
        if(i == rows.length && (isThesis || isPhD)) {
            if(!isPhD || year == null || year < 1990) { // Iron Mountain Button
                for(i = 0; i < rows.length; i++) {
                    if(rows[i].innerHTML.indexOf("Iron Mountain") > -1) {
                        imgsrc = "https://library.case.edu/images/catalog/RequestItem-IM.gif";
                        linksrc = "http://library.case.edu/forms/ironrequestform.aspx?"+buttonQuery()+"&url="+ document.getElementById("recordnum");
                        break;
                    }
                }
            }
            else { // Proquest Button
                imgsrc2 = "https://library.case.edu/images/catalog/proquest_search.gif";
                linksrc2 = getProquestLink();
            }
        }
        */
    
    
    var all = document.getElementsByTagName("table");
    for (i in all)
        if (all[i].className == "bibHoldings")
            attach = all[i];
        else if (all[i].className == "bibItems") 
        {
            attach = all[i];
            break;
        }
    
    if (imgsrc != null || imgsrc2 != null)
    {
        if(imgsrc != null && imgsrc2 == null)
            attachButtonImg(imgsrc, linksrc, "Location Map");
        else if(imgsrc == null && imgsrc2 != null)
            attachButtonImg(imgsrc2, linksrc2, "Location Map");
        else if(imgsrc != null && imgsrc2 != null)
        {
            attachButtonImg(imgsrc, linksrc, "Location Map");
            attachButtonImg(imgsrc2, linksrc2, "Proquest Button");
        }
        displayed = true;
    }
    if(imgsrc3 != null)
    {
        attachButtonImg(imgsrc3, linksrc3, "Location Map");
        displayed = true;
    }
    return displayed || electronicResource;
}
}

// Adds a button image
function attachButtonImg(imgsrc, linksrc, alt)
{
    var img = document.createElement("img");
    img.setAttribute("src", imgsrc);
    img.setAttribute("alt", alt);
    img.setAttribute("border", "0");
    var link = document.createElement("a");
    link.setAttribute("href", linksrc);
    link.setAttribute("target", "_blank");
    link.appendChild(img);
    var div = document.createElement("div");
    div.setAttribute("align", "right");
    div.setAttribute("class", "mapimage");
    div.appendChild(link);

    var all = document.getElementsByTagName("table");
    var attach = null;
    for (i in all)
        if (all[i].className == "bibHoldings")
            attach = all[i];
        else if (all[i].className == "bibItems") 
        {
            attach = all[i];
            break;
        }
    if (attach == null)
    {
        // No location table
        all = document.getElementsByTagName("div");
        for (i in all)
            if (all[i].className == "bibRecordLink")
            {
                attach = all[i].firstChild;
                div.setAttribute("style", "margin-top:40px;");
                break;
            }
    }

    attach.parentNode.appendChild(div);
}

// Checks to see what the page is for
function findFunction()
{
    var book = false;
    var loc = false;
    var allDivs = document.getElementsByTagName("div");
    for (i in allDivs)
        if (allDivs[i].className == "bibScreen")
            book = true;
    var allTrs = document.getElementsByTagName("tr");
    for (i in allTrs)
        if (allTrs[i].className == "bibItemsEntry")
            loc = true;
    var allEms = document.getElementsByTagName("em");
    for (i = 0; i < allEms.length; i++){
        if (allEms[i].innerHTML.indexOf("Location")> -1)
            loc = true;
            }
    if (book && loc)
        return 2;                           //is a book page, and has a location
    else if (book)
        return 1;                           //is a book page, no location
    var allInputs = document.getElementsByTagName("input");
    for (i=0; i < allInputs.length; i++)
        if (allInputs[i].name == "extpatid")
           return 3;                        //is a login page
    return 0;                               //not of interest
}

// Entry point for page
// Loads the book viewer, adds buttons, or sets up login script as needed
switch (findFunction()) {
    case 0:
        google.setOnLoadCallback(removeCanvas);
        break;
    case 1:
        google.load("books", "0");
        google.load("feeds", "1");
        google.setOnLoadCallback(initialize);
        break;
    case 2:
        google.load("books", "0");
        google.load("feeds", "1");
        google.setOnLoadCallback(initializeWithButton);
        break;
    case 3:
        google.setOnLoadCallback(setupLogin);
}

//script to check and see what browser the user is using and show google book if browser is above IE6
var disp = false;

if(navigator.appName == "Microsoft Internet Explorer")
{
    if (/MSIE (\d+\.\d+)/.test(navigator.userAgent))//test for MSIE x.x;
    { 
        var ieversion=new Number(RegExp.$1) // capture x.x portion and store as a number
        if (ieversion < 7)
            disp = true;
    }
}  
if(disp)
    document.getElementById("frame").innerHTML = '';</script>

<style type="text/css">
div#viewerCanvas div {clear:none}   /* so book viewer toolbar renders correctly */
</style>

<!-- Google Books viewer elements -->
<div id="frame" align="center"><a id="bookviewer"></a>
<div id="viewerCanvas" style="width: 700px; height: 500px"></div></div>
<br />
<div id="navBar" align="center"></div>

<!--Begin the bottom logo table-->
<div id="footer"> <!-- contains the entire footer banner-->
		<ul id="footernav">  <!-- upper bar -->
			<li style="display:inline;">
				<a href="/">Home</a>
			</li>
			<li style="display:inline;">|</li>
			<li style="display:inline;">
				<a href="/screens/help_index.html">Help</a>
			</li>
		</ul>
	
	
	<div id="bottombar"></div><!-- thin line on the bottom -->
<div><!-- lower bar --><table style="width: 100%; position: absolute;">

			<td><div id="onCampus"><!-- left side --></div></td>

			<td><p id="footerInfo" align="center">  </p><!-- middle text --></td>

			<td><div id="google_translate_element"></div></td><script type="text/javascript">
			function googleTranslateElementInit() {
			new google.translate.TranslateElement({pageLanguage: 'en', layout: google.translate.TranslateElement.InlineLayout.SIMPLE}, 'google_translate_element');
}
			</script><script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>

	</table></div>
</div>
<!-- old http stuffs>
<table width="100%" border="0" cellspacing="0" cellpadding="2" align="center" style="position:absolute;">
<tr valign="middle">
<td height="22px"> 
</td>
</tr>
<td class="pageNavAreaBorder"><img src="/screens/spacer.gif" height="1" width="1" alt="" /></td>
</tr>
<tr>
<td align="center" class="pageNavArea">
<!--Beginning text-only navigation bar at the bottom of the page-->
<!--End of bottom navigation bar-->
</td>
</tr>
</table>
 <script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-2228420-3']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<!--End the bottom logo table-->
<!-- end botlogo -->

</body>
</html>
