import org.marc4j.*;
import org.marc4j.marc.*;
import org.solrmarc.tools.Utils;
import org.solrmarc.tools.CallNumUtils;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

// define the base level indexer so that its methods can be called from the script.
// note that the SolrIndexer code will set this value before the script methods are called.
org.solrmarc.index.SolrIndexer indexer = null;

Set getCollectionFacet(Record record)
{

  Set fields710a   = indexer.getFieldList(record, "710a");
  Set result       = new LinkedHashSet();

  if (fields710a != null) {

    for ( String f710a : fields710a ) {

      String pattern = "Rock and Roll Hall of Fame and Museum";
      Pattern p      = Pattern.compile(pattern);
      Matcher m      = p.matcher(f710a);

      if (m.find()) {
        String[] parts = f710a.split(" \\(");
        result.add(parts[0]);
      }

    }

  }

  return result;


}

Set supressRockHall(Record record, String fieldSpec)
{

  result = indexer.getFieldList(record, fieldSpec);
  newResult = new LinkedHashSet();
  for (String s : result)
  {

    String pattern = "Rock and Roll Hall of Fame and Museum";
    Pattern p      = Pattern.compile(pattern);
    Matcher m      = p.matcher(s);

    if (m.find()) {
      String[] parts = s.split(" \\(");
      newResult.add(Utils.cleanData(parts[0]));
    }
    else {
      newResult.add(Utils.cleanData(s));
    }
  }
  return newResult;

}